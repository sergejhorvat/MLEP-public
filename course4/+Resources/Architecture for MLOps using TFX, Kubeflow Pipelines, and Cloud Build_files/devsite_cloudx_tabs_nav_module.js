(function(_ds){var window=this;'use strict';var ria=function(a,b){var c=0,d=0,e=[0];a.filter(function(g){return 0<g.Bj}).forEach(function(g){c+g.Bj<=b?c+=g.Bj:(c=g.Bj,e.push(d));d+=g.Bj});return e},K0=function(){this.oa=0;this.$=[];this.Ba=[];this.ya=this.ra=0},sia=function(){},L0=function(a,b,c,d,e){var g=a.getBoundingClientRect().width;0===g&&32>d?window.requestAnimationFrame(function(){L0(a,b,c,d+1,e)}):32<=d?c("Exceeded max paint retries."):b(g)},tia=function(a){var b=void 0===b?32:b;return new Promise(function(c,d){L0(a,c,
d,0,b)})},N0=function(){var a=_ds.DI.call(this)||this;a.Xa=new _ds.Gv;a.element=a;a.aK=sia;a.render=_ds.lx;a.Sa=function(b){var c=a.state.ea;c+="right"===b.detail?1:-1;M0(a,a.state.$,c)};a.state=new K0;a.Da=a.element.querySelector(".devsite-tabs-wrapper");a.Da.style.setProperty("--scroll-animation-duration","250ms");a.jb=a.element.attachShadow({mode:"open"});uia(a);a.element.querySelectorAll(".devsite-tabs-dropdown a").forEach(function(b){b.addEventListener("click",function(){_ds.DI.prototype.Zf.call(a)})});
return a},uia=function(a){_ds.R(a,function c(){var d=this;return _ds.D(c,function(e){if(1==e.$)return _ds.x(e,O0(d,d.state),2);document.body.dispatchEvent(new CustomEvent("cloud-tabs-loaded"));_ds.y(e)})})},M0=function(a,b,c){return _ds.R(a,function e(){var g=this;return _ds.D(e,function(h){g.state.Aa=-b[c];g.state.ea=c;return _ds.x(h,O0(g,g.state),0)})})},O0=function(a,b){return _ds.R(a,function d(){var e=this,g;return _ds.D(d,function(h){if(1==h.$)return _ds.x(h,via(e,b),2);g=_ds.V(wia,0<b.ea?"visible":
"",b.ea<b.$.length-1?"visible":"");e.render(g,e.jb);_ds.y(h)})})},via=function(a,b){return _ds.R(a,function d(){var e=this,g,h;return _ds.D(d,function(k){g=e;h=new Promise(function(l){g.Da.style.setProperty("--scroll-offset",b.Aa+"px");window.setTimeout(function(){l()},250)});return k.return(h)})})};
_ds.p.Object.defineProperties(K0.prototype,{ea:{configurable:!0,enumerable:!0,get:function(){return this.ra},set:function(a){0>a?a=0:a>this.$.length-1&&(a=this.$.length-1);this.ra=a}},Aa:{configurable:!0,enumerable:!0,set:function(a){0<a&&(a=0);this.ya=a},get:function(){return this.ya}}});var wia=_ds.t(["\n      <style>\n        .overflow-cover {\n          background-color: white;\n          height: 100%;\n          position: absolute;\n          top: 0;\n          z-index: 100;\n        }\n\n        .overflow-cover.left-overflow {\n          left: -360px;\n          width: 360px;\n        }\n\n        .overflow-cover.right-overflow {\n          right: -710px;\n          width: 700px;\n        }\n\n        button.scroll-button {\n          background-color: white;\n          border: none;\n          color: var(--scroll-button-color);\n          cursor: pointer;\n          display: none;\n          font-family: 'Material Icons';\n          /* Make these buttons take up the same vertical space as a normal full\n          line of text. (since they will be sitting next to text). */\n          font-size: var(--scroll-button-font-size);\n          height: 100%;\n          padding: 0;\n          position: absolute;\n          top: 0;\n          z-index: 101;\n        }\n\n        button.scroll-button:hover,\n        button.scroll-button:focus {\n            color: var(--scroll-button-hover-color);\n            outline: none;\n        }\n\n        button.scroll-button.scroll-left {\n          /* Pull the left scroll button slightly behind the content so that it\n          doesn't sit too close to text. */\n          left: -8px;\n        }\n\n        button.scroll-button.scroll-left::after {\n          content: 'chevron_left';\n        }\n\n        button.scroll-button.scroll-right {\n          /* Pull the right scroll button slightly ahead of content so that it\n          doesn't sit too close to text. */\n          right: -8px;\n        }\n\n        button.scroll-button.scroll-right::after {\n          content: 'chevron_right';\n        }\n\n        button.scroll-button.visible {\n          display: block;\n        }\n      </style>\n      <div class=\"overflow-cover left-overflow\"></div>\n      <button class=\"scroll-button scroll-left ",
"\"\n              onclick=\"this.dispatchEvent(new CustomEvent('scroll-nav',\n                          {bubbles: true, composed: true, detail: 'left'}))\">\n      </button>\n      <slot></slot>\n      <button class=\"scroll-button scroll-right ",'"\n              onclick="this.dispatchEvent(new CustomEvent(\'scroll-nav\',\n                          {bubbles: true, composed: true, detail: \'right\'}))">\n      </button>\n      <div class="overflow-cover right-overflow"></div>\n    ']);_ds.w(N0,_ds.DI);_ds.f=N0.prototype;_ds.f.Ar=function(a){_ds.DI.prototype.Ar.call(this,a);a.target instanceof Node&&_ds.Xv(this.Xa,a.target)};_ds.f.connectedCallback=function(){_ds.DI.prototype.connectedCallback.call(this);this.element.addEventListener("scroll-nav",this.Sa)};_ds.f.disconnectedCallback=function(){_ds.DI.prototype.disconnectedCallback.call(this);this.element.removeEventListener("scroll-nav",this.Sa)};_ds.f.eA=function(a){return _ds.R(this,function c(){return _ds.D(c,function(d){return d.return(a.hasAttribute("generated-tab-menu"))})})};
_ds.f.As=function(){_ds.R(this,function b(){var c=this,d,e;return _ds.D(b,function(g){switch(g.$){case 1:return _ds.A(g,2),_ds.x(g,tia(c.Da),4);case 4:d=g.ea;if(c.state.oa===d){g.Ea(5);break}c.state.oa=d;e=Array.from(c.element.querySelectorAll("tab"));c.state.Ba=e.map(function(h){return{element:h,Bj:h?h.offsetWidth:0}});c.state.$=ria(c.state.Ba,c.state.oa);return _ds.x(g,M0(c,c.state.$,0),5);case 5:_ds.B(g,0);break;case 2:return _ds.C(g),_ds.x(g,M0(c,c.state.$,0),0)}})})};try{window.customElements.define("cloudx-tabs-nav",N0)}catch(a){console.warn("devsite.app.tenants.cloud.static.components.CloudxTabsNav",a)};})(_ds_www);
